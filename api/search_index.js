var search_data = {
    'index': {
        'searchIndex': ["spark","spark\\controller","spark\\controller\\eventlistener","spark\\core","spark\\core\\command","spark\\core\\generator","spark\\exception","spark\\model","spark\\support","spark\\application","spark\\controller\\base","spark\\controller\\controllercollection","spark\\controller\\controllerserviceprovider","spark\\controller\\eventlistener\\autoviewrender","spark\\controller\\eventlistener\\controllerclassresolver","spark\\controller\\renderpipeline","spark\\controller\\viewcontext","spark\\core\\applicationaware","spark\\core\\bootstrap","spark\\core\\cli","spark\\core\\command\\createapplication","spark\\core\\command\\generate","spark\\core\\command\\queueworker","spark\\core\\command\\server","spark\\core\\command\\upgrade","spark\\core\\configbuilder","spark\\core\\coreserviceprovider","spark\\core\\developmentserver","spark\\core\\generator\\abstractgenerator","spark\\core\\generator\\controllergenerator","spark\\core\\generator\\generatorinterface","spark\\core\\job","spark\\core\\webtestcase","spark\\exception","spark\\exception\\invalidargumentexception","spark\\exception\\runtimeexception","spark\\exception\\unexpectedvalueexception","spark\\model\\assertbuilder","spark\\model\\base","spark\\model\\behaviorinterface","spark\\model\\constraintsbuilder","spark\\spark","spark\\support\\strings","spark\\application::__construct","spark\\controller\\base::respondto","spark\\controller\\base::render","spark\\controller\\base::rescue","spark\\controller\\base::notfound","spark\\controller\\base::request","spark\\controller\\base::response","spark\\controller\\base::flash","spark\\controller\\base::session","spark\\controller\\base::application","spark\\controller\\base::setapplication","spark\\controller\\controllercollection::scope","spark\\controller\\controllercollection::draw","spark\\controller\\controllercollection::redirect","spark\\controller\\controllercollection::resources","spark\\controller\\controllercollection::resource","spark\\controller\\controllercollection::flush","spark\\controller\\controllerserviceprovider::register","spark\\controller\\controllerserviceprovider::boot","spark\\controller\\eventlistener\\autoviewrender::__construct","spark\\controller\\eventlistener\\autoviewrender::renderview","spark\\controller\\eventlistener\\controllerclassresolver::__construct","spark\\controller\\eventlistener\\controllerclassresolver::registermodule","spark\\controller\\eventlistener\\controllerclassresolver::setdefaultmodule","spark\\controller\\eventlistener\\controllerclassresolver::onkernelrequest","spark\\controller\\eventlistener\\controllerclassresolver::getcontroller","spark\\controller\\renderpipeline::__construct","spark\\controller\\renderpipeline::addformat","spark\\controller\\renderpipeline::addfallback","spark\\controller\\renderpipeline::rendercontext","spark\\controller\\renderpipeline::render","spark\\controller\\viewcontext::__construct","spark\\controller\\viewcontext::setblock","spark\\controller\\viewcontext::contentfor","spark\\controller\\viewcontext::endcontentfor","spark\\controller\\viewcontext::block","spark\\controller\\viewcontext::blocks","spark\\controller\\viewcontext::__get","spark\\controller\\viewcontext::__call","spark\\core\\applicationaware::setapplication","spark\\core\\cli::__construct","spark\\core\\cli::run","spark\\core\\command\\generate::__construct","spark\\core\\command\\generate::register","spark\\core\\command\\queueworker::setsilexapplication","spark\\core\\command\\server::__construct","spark\\core\\configbuilder::__construct","spark\\core\\configbuilder::with","spark\\core\\configbuilder::enable","spark\\core\\configbuilder::disable","spark\\core\\configbuilder::group","spark\\core\\configbuilder::flush","spark\\core\\coreserviceprovider::register","spark\\core\\coreserviceprovider::boot","spark\\core\\developmentserver::__construct","spark\\core\\developmentserver::run","spark\\core\\generator\\abstractgenerator::setoutput","spark\\core\\generator\\abstractgenerator::setapplication","spark\\core\\generator\\controllergenerator::generate","spark\\core\\generator\\generatorinterface::generate","spark\\core\\generator\\generatorinterface::setoutput","spark\\core\\job::setapplication","spark\\core\\webtestcase::createapplication","spark\\model\\assertbuilder::__call","spark\\model\\base::__construct","spark\\model\\base::__init","spark\\model\\base::save","spark\\model\\base::delete","spark\\model\\behaviorinterface::register","spark\\model\\constraintsbuilder::__construct","spark\\model\\constraintsbuilder::property","spark\\model\\constraintsbuilder::getter"],
        'info': [["Spark","","Spark.html","","",3],["Spark\\Controller","","Spark\/Controller.html","","",3],["Spark\\Controller\\EventListener","","Spark\/Controller\/EventListener.html","","",3],["Spark\\Core","","Spark\/Core.html","","",3],["Spark\\Core\\Command","","Spark\/Core\/Command.html","","",3],["Spark\\Core\\Generator","","Spark\/Core\/Generator.html","","",3],["Spark\\Exception","","Spark\/Exception.html","","",3],["Spark\\Model","","Spark\/Model.html","","",3],["Spark\\Support","","Spark\/Support.html","","",3],["Application","Spark","Spark\/Application.html"," < Application","",1],["Base","Spark\\Controller","Spark\/Controller\/Base.html","","",1],["ControllerCollection","Spark\\Controller","Spark\/Controller\/ControllerCollection.html"," < ControllerCollection","Defines more convenience methods for defining routes",1],["ControllerServiceProvider","Spark\\Controller","Spark\/Controller\/ControllerServiceProvider.html","","",1],["AutoViewRender","Spark\\Controller\\EventListener","Spark\/Controller\/EventListener\/AutoViewRender.html","","",1],["ControllerClassResolver","Spark\\Controller\\EventListener","Spark\/Controller\/EventListener\/ControllerClassResolver.html","","",1],["RenderPipeline","Spark\\Controller","Spark\/Controller\/RenderPipeline.html","","",1],["ViewContext","Spark\\Controller","Spark\/Controller\/ViewContext.html","","",1],["ApplicationAware","Spark\\Core","Spark\/Core\/ApplicationAware.html","","",1],["Bootstrap","Spark\\Core","Spark\/Core\/Bootstrap.html","","",1],["Cli","Spark\\Core","Spark\/Core\/Cli.html","","",1],["CreateApplication","Spark\\Core\\Command","Spark\/Core\/Command\/CreateApplication.html"," < Command","",1],["Generate","Spark\\Core\\Command","Spark\/Core\/Command\/Generate.html"," < Command","",1],["QueueWorker","Spark\\Core\\Command","Spark\/Core\/Command\/QueueWorker.html"," < WorkCommand","",1],["Server","Spark\\Core\\Command","Spark\/Core\/Command\/Server.html"," < Command","",1],["Upgrade","Spark\\Core\\Command","Spark\/Core\/Command\/Upgrade.html"," < Command","",1],["ConfigBuilder","Spark\\Core","Spark\/Core\/ConfigBuilder.html"," < Pimple","",1],["CoreServiceProvider","Spark\\Core","Spark\/Core\/CoreServiceProvider.html","","",1],["DevelopmentServer","Spark\\Core","Spark\/Core\/DevelopmentServer.html","","",1],["AbstractGenerator","Spark\\Core\\Generator","Spark\/Core\/Generator\/AbstractGenerator.html","","",1],["ControllerGenerator","Spark\\Core\\Generator","Spark\/Core\/Generator\/ControllerGenerator.html"," < AbstractGenerator","",1],["GeneratorInterface","Spark\\Core\\Generator","Spark\/Core\/Generator\/GeneratorInterface.html","","",1],["Job","Spark\\Core","Spark\/Core\/Job.html","","",1],["WebTestCase","Spark\\Core","Spark\/Core\/WebTestCase.html"," < WebTestCase","",1],["Exception","Spark","Spark\/Exception.html","","",1],["InvalidArgumentException","Spark\\Exception","Spark\/Exception\/InvalidArgumentException.html"," < InvalidArgumentException","",1],["RuntimeException","Spark\\Exception","Spark\/Exception\/RuntimeException.html"," < RuntimeException","",1],["UnexpectedValueException","Spark\\Exception","Spark\/Exception\/UnexpectedValueException.html"," < UnexpectedValueException","",1],["AssertBuilder","Spark\\Model","Spark\/Model\/AssertBuilder.html","","",1],["Base","Spark\\Model","Spark\/Model\/Base.html","","",1],["BehaviorInterface","Spark\\Model","Spark\/Model\/BehaviorInterface.html","","",1],["ConstraintsBuilder","Spark\\Model","Spark\/Model\/ConstraintsBuilder.html","","",1],["Spark","Spark","Spark\/Spark.html","","",1],["Strings","Spark\\Support","Spark\/Support\/Strings.html","","",1],["Application::__construct","Spark\\Application","Spark\/Application.html#method___construct","()","",2],["Base::respondTo","Spark\\Controller\\Base","Spark\/Controller\/Base.html#method_respondTo","(array $spec)","",2],["Base::render","Spark\\Controller\\Base","Spark\/Controller\/Base.html#method_render","($options = array())","",2],["Base::rescue","Spark\\Controller\\Base","Spark\/Controller\/Base.html#method_rescue","($exceptionClass, $method)","",2],["Base::notFound","Spark\\Controller\\Base","Spark\/Controller\/Base.html#method_notFound","($message = &#039;&#039;)","",2],["Base::request","Spark\\Controller\\Base","Spark\/Controller\/Base.html#method_request","()","",2],["Base::response","Spark\\Controller\\Base","Spark\/Controller\/Base.html#method_response","()","",2],["Base::flash","Spark\\Controller\\Base","Spark\/Controller\/Base.html#method_flash","()","",2],["Base::session","Spark\\Controller\\Base","Spark\/Controller\/Base.html#method_session","()","",2],["Base::application","Spark\\Controller\\Base","Spark\/Controller\/Base.html#method_application","()","",2],["Base::setApplication","Spark\\Controller\\Base","Spark\/Controller\/Base.html#method_setApplication","(<abbr title=\"Silex\\Application\">Application<\/abbr> $application)","",2],["ControllerCollection::scope","Spark\\Controller\\ControllerCollection","Spark\/Controller\/ControllerCollection.html#method_scope","(string $prefix, <abbr title=\"Spark\\Controller\\callable\">callable<\/abbr> $callback)","Scopes all routes in the collection to the given prefix",2],["ControllerCollection::draw","Spark\\Controller\\ControllerCollection","Spark\/Controller\/ControllerCollection.html#method_draw","(<abbr title=\"Spark\\Controller\\callable\">callable<\/abbr> $callback)","Invokes the callback with the collection as argument",2],["ControllerCollection::redirect","Spark\\Controller\\ControllerCollection","Spark\/Controller\/ControllerCollection.html#method_redirect","($to, $options = array())","Returns a controller which redirects to the specified",2],["ControllerCollection::resources","Spark\\Controller\\ControllerCollection","Spark\/Controller\/ControllerCollection.html#method_resources","(string $resourceName, array $options = array())","Define resource routes for a plural resource.",2],["ControllerCollection::resource","Spark\\Controller\\ControllerCollection","Spark\/Controller\/ControllerCollection.html#method_resource","(string $resourceName, array $options = array())","Define resource routes for a singular resource (a resource",2],["ControllerCollection::flush","Spark\\Controller\\ControllerCollection","Spark\/Controller\/ControllerCollection.html#method_flush","($prefix = &#039;&#039;)","",2],["ControllerServiceProvider::register","Spark\\Controller\\ControllerServiceProvider","Spark\/Controller\/ControllerServiceProvider.html#method_register","(<abbr title=\"Silex\\Application\">Application<\/abbr> $app)","",2],["ControllerServiceProvider::boot","Spark\\Controller\\ControllerServiceProvider","Spark\/Controller\/ControllerServiceProvider.html#method_boot","(<abbr title=\"Silex\\Application\">Application<\/abbr> $app)","",2],["AutoViewRender::__construct","Spark\\Controller\\EventListener\\AutoViewRender","Spark\/Controller\/EventListener\/AutoViewRender.html#method___construct","(<a href=\"Spark\/Controller\/RenderPipeline.html\"><abbr title=\"Spark\\Controller\\RenderPipeline\">RenderPipeline<\/abbr><\/a> $render, <a href=\"Spark\/Controller\/EventListener\/ControllerClassResolver.html\"><abbr title=\"Spark\\Controller\\EventListener\\ControllerClassResolver\">ControllerClassResolver<\/abbr><\/a> $resolver)","",2],["AutoViewRender::renderView","Spark\\Controller\\EventListener\\AutoViewRender","Spark\/Controller\/EventListener\/AutoViewRender.html#method_renderView","(<abbr title=\"Symfony\\Component\\HttpKernel\\Event\\GetResponseForControllerResultEvent\">GetResponseForControllerResultEvent<\/abbr> $event)","",2],["ControllerClassResolver::__construct","Spark\\Controller\\EventListener\\ControllerClassResolver","Spark\/Controller\/EventListener\/ControllerClassResolver.html#method___construct","(<abbr title=\"Silex\\Application\">Application<\/abbr> $app)","",2],["ControllerClassResolver::registerModule","Spark\\Controller\\EventListener\\ControllerClassResolver","Spark\/Controller\/EventListener\/ControllerClassResolver.html#method_registerModule","($module, $namespace)","",2],["ControllerClassResolver::setDefaultModule","Spark\\Controller\\EventListener\\ControllerClassResolver","Spark\/Controller\/EventListener\/ControllerClassResolver.html#method_setDefaultModule","($module)","",2],["ControllerClassResolver::onKernelRequest","Spark\\Controller\\EventListener\\ControllerClassResolver","Spark\/Controller\/EventListener\/ControllerClassResolver.html#method_onKernelRequest","(<abbr title=\"Symfony\\Component\\HttpKernel\\Event\\GetResponseEvent\">GetResponseEvent<\/abbr> $event)","",2],["ControllerClassResolver::getController","Spark\\Controller\\EventListener\\ControllerClassResolver","Spark\/Controller\/EventListener\/ControllerClassResolver.html#method_getController","($name, $module = null)","",2],["RenderPipeline::__construct","Spark\\Controller\\RenderPipeline","Spark\/Controller\/RenderPipeline.html#method___construct","(<a href=\"Spark\/Controller\/ViewContext.html\"><abbr title=\"Spark\\Controller\\ViewContext\">ViewContext<\/abbr><\/a> $defaultContext, array $scriptPath = null)","Constructor",2],["RenderPipeline::addFormat","Spark\\Controller\\RenderPipeline","Spark\/Controller\/RenderPipeline.html#method_addFormat","(string $contentType, <abbr title=\"Spark\\Controller\\callable\">callable<\/abbr> $handler)","Adds a format handler",2],["RenderPipeline::addFallback","Spark\\Controller\\RenderPipeline","Spark\/Controller\/RenderPipeline.html#method_addFallback","(<abbr title=\"Spark\\Controller\\callable\">callable<\/abbr> $handler)","",2],["RenderPipeline::renderContext","Spark\\Controller\\RenderPipeline","Spark\/Controller\/RenderPipeline.html#method_renderContext","(<a href=\"Spark\/Controller\/ViewContext.html\"><abbr title=\"Spark\\Controller\\ViewContext\">ViewContext<\/abbr><\/a> $context)","",2],["RenderPipeline::render","Spark\\Controller\\RenderPipeline","Spark\/Controller\/RenderPipeline.html#method_render","($options = array(), <abbr title=\"Symfony\\Component\\HttpFoundation\\Response\">Response<\/abbr> $response = null)","",2],["ViewContext::__construct","Spark\\Controller\\ViewContext","Spark\/Controller\/ViewContext.html#method___construct","(<abbr title=\"Spark\\Controller\\Silex\\Application\">Application<\/abbr> $app)","",2],["ViewContext::setBlock","Spark\\Controller\\ViewContext","Spark\/Controller\/ViewContext.html#method_setBlock","($block, $content)","Assigns the string to the block.",2],["ViewContext::contentFor","Spark\\Controller\\ViewContext","Spark\/Controller\/ViewContext.html#method_contentFor","($name, <abbr title=\"Spark\\Controller\\callable\">callable<\/abbr> $block = null)","Starts capturing content into a block",2],["ViewContext::endContentFor","Spark\\Controller\\ViewContext","Spark\/Controller\/ViewContext.html#method_endContentFor","()","Stops capturing started with `contentFor()` and saves",2],["ViewContext::block","Spark\\Controller\\ViewContext","Spark\/Controller\/ViewContext.html#method_block","(string $name)","Returns the content of the block",2],["ViewContext::blocks","Spark\\Controller\\ViewContext","Spark\/Controller\/ViewContext.html#method_blocks","()","",2],["ViewContext::__get","Spark\\Controller\\ViewContext","Spark\/Controller\/ViewContext.html#method___get","($property)","",2],["ViewContext::__call","Spark\\Controller\\ViewContext","Spark\/Controller\/ViewContext.html#method___call","($method, $argv)","",2],["ApplicationAware::setApplication","Spark\\Core\\ApplicationAware","Spark\/Core\/ApplicationAware.html#method_setApplication","(<abbr title=\"Silex\\Application\">Application<\/abbr> $application)","",2],["Cli::__construct","Spark\\Core\\Cli","Spark\/Core\/Cli.html#method___construct","()","",2],["Cli::run","Spark\\Core\\Cli","Spark\/Core\/Cli.html#method_run","()","",2],["Generate::__construct","Spark\\Core\\Command\\Generate","Spark\/Core\/Command\/Generate.html#method___construct","(<abbr title=\"Silex\\Application\">Application<\/abbr> $app)","",2],["Generate::register","Spark\\Core\\Command\\Generate","Spark\/Core\/Command\/Generate.html#method_register","($type, <a href=\"Spark\/Core\/Generator\/GeneratorInterface.html\"><abbr title=\"Spark\\Core\\Generator\\GeneratorInterface\">GeneratorInterface<\/abbr><\/a> $generator)","",2],["QueueWorker::setSilexApplication","Spark\\Core\\Command\\QueueWorker","Spark\/Core\/Command\/QueueWorker.html#method_setSilexApplication","(<abbr title=\"Silex\\Application\">Application<\/abbr> $app)","",2],["Server::__construct","Spark\\Core\\Command\\Server","Spark\/Core\/Command\/Server.html#method___construct","(<abbr title=\"Silex\\Application\">Application<\/abbr> $app)","",2],["ConfigBuilder::__construct","Spark\\Core\\ConfigBuilder","Spark\/Core\/ConfigBuilder.html#method___construct","($namespace = null)","",2],["ConfigBuilder::with","Spark\\Core\\ConfigBuilder","Spark\/Core\/ConfigBuilder.html#method_with","(<abbr title=\"Spark\\Core\\callable\">callable<\/abbr> $block)","",2],["ConfigBuilder::enable","Spark\\Core\\ConfigBuilder","Spark\/Core\/ConfigBuilder.html#method_enable","($id)","",2],["ConfigBuilder::disable","Spark\\Core\\ConfigBuilder","Spark\/Core\/ConfigBuilder.html#method_disable","($id)","",2],["ConfigBuilder::group","Spark\\Core\\ConfigBuilder","Spark\/Core\/ConfigBuilder.html#method_group","($name, <abbr title=\"Spark\\Core\\callable\">callable<\/abbr> $block)","",2],["ConfigBuilder::flush","Spark\\Core\\ConfigBuilder","Spark\/Core\/ConfigBuilder.html#method_flush","(<abbr title=\"Silex\\Application\">Application<\/abbr> $app)","",2],["CoreServiceProvider::register","Spark\\Core\\CoreServiceProvider","Spark\/Core\/CoreServiceProvider.html#method_register","(<abbr title=\"Silex\\Application\">Application<\/abbr> $app)","",2],["CoreServiceProvider::boot","Spark\\Core\\CoreServiceProvider","Spark\/Core\/CoreServiceProvider.html#method_boot","(<abbr title=\"Silex\\Application\">Application<\/abbr> $app)","",2],["DevelopmentServer::__construct","Spark\\Core\\DevelopmentServer","Spark\/Core\/DevelopmentServer.html#method___construct","($documentRoot, $router)","",2],["DevelopmentServer::run","Spark\\Core\\DevelopmentServer","Spark\/Core\/DevelopmentServer.html#method_run","($serverName = null, $port = null)","",2],["AbstractGenerator::setOutput","Spark\\Core\\Generator\\AbstractGenerator","Spark\/Core\/Generator\/AbstractGenerator.html#method_setOutput","(<abbr title=\"Symfony\\Component\\Console\\Output\\OutputInterface\">OutputInterface<\/abbr> $output)","",2],["AbstractGenerator::setApplication","Spark\\Core\\Generator\\AbstractGenerator","Spark\/Core\/Generator\/AbstractGenerator.html#method_setApplication","(<abbr title=\"Silex\\Application\">Application<\/abbr> $application)","",2],["ControllerGenerator::generate","Spark\\Core\\Generator\\ControllerGenerator","Spark\/Core\/Generator\/ControllerGenerator.html#method_generate","($name, $options = array())","",2],["GeneratorInterface::generate","Spark\\Core\\Generator\\GeneratorInterface","Spark\/Core\/Generator\/GeneratorInterface.html#method_generate","($name, $options = array())","",2],["GeneratorInterface::setOutput","Spark\\Core\\Generator\\GeneratorInterface","Spark\/Core\/Generator\/GeneratorInterface.html#method_setOutput","(<abbr title=\"Symfony\\Component\\Console\\Output\\OutputInterface\">OutputInterface<\/abbr> $output)","",2],["Job::setApplication","Spark\\Core\\Job","Spark\/Core\/Job.html#method_setApplication","(<abbr title=\"Silex\\Application\">Application<\/abbr> $app)","",2],["WebTestCase::createApplication","Spark\\Core\\WebTestCase","Spark\/Core\/WebTestCase.html#method_createApplication","()","",2],["AssertBuilder::__call","Spark\\Model\\AssertBuilder","Spark\/Model\/AssertBuilder.html#method___call","($constraint, $arguments = array())","",2],["Base::__construct","Spark\\Model\\Base","Spark\/Model\/Base.html#method___construct","($properties = array())","",2],["Base::__init","Spark\\Model\\Base","Spark\/Model\/Base.html#method___init","()","",2],["Base::save","Spark\\Model\\Base","Spark\/Model\/Base.html#method_save","()","",2],["Base::delete","Spark\\Model\\Base","Spark\/Model\/Base.html#method_delete","()","",2],["BehaviorInterface::register","Spark\\Model\\BehaviorInterface","Spark\/Model\/BehaviorInterface.html#method_register","(string $class, <abbr title=\"Evenement\\EventEmitterInterface\">EventEmitterInterface<\/abbr> $events)","Gets called when the behavior is registered via Model::register()",2],["ConstraintsBuilder::__construct","Spark\\Model\\ConstraintsBuilder","Spark\/Model\/ConstraintsBuilder.html#method___construct","(<abbr title=\"Symfony\\Component\\Validator\\Mapping\\ClassMetadata\">ClassMetadata<\/abbr> $metadata)","",2],["ConstraintsBuilder::property","Spark\\Model\\ConstraintsBuilder","Spark\/Model\/ConstraintsBuilder.html#method_property","($property, <abbr title=\"Spark\\Model\\callable\">callable<\/abbr> $callback)","",2],["ConstraintsBuilder::getter","Spark\\Model\\ConstraintsBuilder","Spark\/Model\/ConstraintsBuilder.html#method_getter","($property, <abbr title=\"Spark\\Model\\callable\">callable<\/abbr> $callback)","",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']